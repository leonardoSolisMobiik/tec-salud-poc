"""
OpenAPI Documentation Configuration
Configures Swagger/OpenAPI documentation for the TecSalud API
"""

from fastapi import FastAPI
from fastapi.openapi.utils import get_openapi

def custom_openapi(app: FastAPI):
    """Generate custom OpenAPI schema"""
    if app.openapi_schema:
        return app.openapi_schema
    
    openapi_schema = get_openapi(
        title="TecSalud API",
        version="2.0.0",
        description="""
        # TecSalud - Asistente Virtual M√©dico con IA
        
        API completa para el sistema TecSalud que integra Azure OpenAI con an√°lisis de documentos completos
        para proporcionar asistencia m√©dica inteligente.
        
        ## üöÄ Caracter√≠sticas Principales
        
        - **Chat M√©dico Inteligente**: Consultas m√©dicas con GPT-4o/4o-mini
        - **An√°lisis de Documentos Completos**: An√°lisis exhaustivo de expedientes m√©dicos
        - **Gesti√≥n de Pacientes**: CRUD completo de pacientes y expedientes
        - **An√°lisis de Documentos**: Procesamiento autom√°tico de documentos m√©dicos
        - **Tool Calling**: Funciones especializadas para tareas m√©dicas
        
        ## üîê Autenticaci√≥n
        
        La API utiliza JWT tokens para autenticaci√≥n. Incluye el token en el header:
        ```
        Authorization: Bearer <your-jwt-token>
        ```
        
        ## üìä Modelos de IA Disponibles
        
        - **gpt-4o**: An√°lisis m√©dicos complejos y diagn√≥sticos profundos
        - **gpt-4o-mini**: Consultas r√°pidas y respuestas eficientes
        - **text-embedding-3-large**: Embeddings para b√∫squeda sem√°ntica
        
        ## üè• Casos de Uso
        
        1. **Consultas M√©dicas**: Chat inteligente con contexto de paciente
        2. **An√°lisis de Expedientes**: Procesamiento autom√°tico de documentos
        3. **B√∫squeda Sem√°ntica**: Encontrar informaci√≥n relevante en expedientes
        4. **Gesti√≥n de Pacientes**: Administraci√≥n completa de datos m√©dicos
        
        ## üìù Formatos Soportados
        
        - **Documentos**: PDF, TXT, DOC, DOCX
        - **Respuestas**: JSON con metadatos de IA
        - **B√∫squeda**: Consultas en lenguaje natural
        
        ## ‚ö° Rate Limits
        
        - **Chat**: 60 requests/minuto
        - **Upload**: 10 files/minuto
        - **Search**: 100 requests/minuto
        
        ## üîó Enlaces √ötiles
        
        - [Documentaci√≥n Completa](http://localhost:8000/docs)
        - [Frontend](http://localhost:3000)
        - [Health Check](http://localhost:8000/api/v1/health)
        """,
        routes=app.routes,
        servers=[
            {
                "url": "http://localhost:8000",
                "description": "Desarrollo Local"
            },
            {
                "url": "https://api.tecsalud.com",
                "description": "Producci√≥n"
            }
        ]
    )
    
    # Add custom tags
    openapi_schema["tags"] = [
        {
            "name": "Chat",
            "description": "Endpoints para chat m√©dico con IA",
            "externalDocs": {
                "description": "Documentaci√≥n de Chat",
                "url": "https://docs.tecsalud.com/chat"
            }
        },
        {
            "name": "Patients",
            "description": "Gesti√≥n de pacientes y expedientes m√©dicos",
            "externalDocs": {
                "description": "Documentaci√≥n de Pacientes",
                "url": "https://docs.tecsalud.com/patients"
            }
        },
        {
            "name": "Documents",
            "description": "Gesti√≥n y an√°lisis de documentos m√©dicos",
            "externalDocs": {
                "description": "Documentaci√≥n de Documentos",
                "url": "https://docs.tecsalud.com/documents"
            }
        },
        {
            "name": "Health",
            "description": "Monitoreo y estado del sistema",
            "externalDocs": {
                "description": "Documentaci√≥n de Health Checks",
                "url": "https://docs.tecsalud.com/health"
            }
        }
    ]
    
    # Add security schemes
    openapi_schema["components"]["securitySchemes"] = {
        "BearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT",
            "description": "JWT token para autenticaci√≥n"
        },
        "ApiKeyAuth": {
            "type": "apiKey",
            "in": "header",
            "name": "X-API-Key",
            "description": "API Key para acceso program√°tico"
        }
    }
    
    # Add global security
    openapi_schema["security"] = [
        {"BearerAuth": []},
        {"ApiKeyAuth": []}
    ]
    
    # Add custom info
    openapi_schema["info"]["contact"] = {
        "name": "TecSalud Support",
        "email": "soporte@tecsalud.com",
        "url": "https://tecsalud.com/support"
    }
    
    openapi_schema["info"]["license"] = {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
    }
    
    # Add external docs
    openapi_schema["externalDocs"] = {
        "description": "Documentaci√≥n Completa de TecSalud",
        "url": "https://docs.tecsalud.com"
    }
    
    app.openapi_schema = openapi_schema
    return app.openapi_schema

# Example responses for documentation
EXAMPLE_RESPONSES = {
    "chat_response": {
        "content": "Bas√°ndome en los s√≠ntomas descritos, podr√≠a tratarse de una infecci√≥n respiratoria alta. Recomiendo realizar un examen f√≠sico completo y considerar estudios de laboratorio si los s√≠ntomas persisten.",
        "model": "gpt-4o-mini",
        "usage": {
            "prompt_tokens": 150,
            "completion_tokens": 75,
            "total_tokens": 225
        },
        "tool_calls": [],
        "patient_context_used": True,
        "response_time": 2.3
    },
    "patient_response": {
        "id": "PAT001",
        "name": "Mar√≠a Gonz√°lez Rodr√≠guez",
        "age": 45,
        "gender": "femenino",
        "blood_type": "O+",
        "phone": "+52 81 1234-5678",
        "email": "maria.gonzalez@email.com",
        "medical_record_number": "EXP-2024-001",
        "last_visit": "2024-01-15",
        "conditions": ["Diabetes Mellitus tipo 2", "Hipertensi√≥n arterial"],
        "allergies": ["Penicilina"],
        "medications": ["Metformina 850mg", "Losart√°n 50mg"]
    },
    "document_upload_response": {
        "document_id": "DOC_PAT001_1704067200_a1b2c3d4",
        "filename": "laboratorio_2024.pdf",
        "size": 2048576,
        "text_length": 1500,
        "status": "processed",
        "analysis_summary": "Documento de laboratorio procesado. Contiene 150 palabras. An√°lisis autom√°tico completado.",
        "message": "Document uploaded and indexed successfully"
    },
    "search_response": {
        "query": "diabetes glucosa",
        "results": [
            {
                "document_id": "DOC_PAT001_001",
                "title": "Laboratorio - Glucosa en ayunas",
                "content_preview": "Glucosa en ayunas: 145 mg/dL (elevada). Hemoglobina glucosilada: 7.2%. Recomendaci√≥n: ajuste de medicaci√≥n antidiab√©tica...",
                "relevance_score": 0.92,
                "document_type": "laboratorio",
                "patient_id": "PAT001",
                "date": "2024-01-15"
            }
        ],
        "total_found": 5,
        "search_time": "0.1s"
    },
    "health_response": {
        "status": "healthy",
        "timestamp": "2024-01-20T10:30:00Z",
        "services": {
            "azure_openai": "healthy",
            "database": "healthy"
        },
        "version": "2.0.0",
        "uptime": "2 days, 14 hours"
    }
}

# Error response examples
ERROR_RESPONSES = {
    400: {
        "description": "Bad Request",
        "content": {
            "application/json": {
                "example": {
                    "detail": "Invalid request format or missing required fields"
                }
            }
        }
    },
    401: {
        "description": "Unauthorized",
        "content": {
            "application/json": {
                "example": {
                    "detail": "Invalid or missing authentication token"
                }
            }
        }
    },
    404: {
        "description": "Not Found",
        "content": {
            "application/json": {
                "example": {
                    "detail": "Resource not found"
                }
            }
        }
    },
    422: {
        "description": "Validation Error",
        "content": {
            "application/json": {
                "example": {
                    "detail": [
                        {
                            "loc": ["body", "field_name"],
                            "msg": "field required",
                            "type": "value_error.missing"
                        }
                    ]
                }
            }
        }
    },
    500: {
        "description": "Internal Server Error",
        "content": {
            "application/json": {
                "example": {
                    "detail": "Internal server error occurred"
                }
            }
        }
    },
    503: {
        "description": "Service Unavailable",
        "content": {
            "application/json": {
                "example": {
                    "detail": "Azure OpenAI service temporarily unavailable"
                }
            }
        }
    }
}

