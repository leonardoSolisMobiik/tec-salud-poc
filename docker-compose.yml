version: '3.8'

services:
  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=sqlite:///./data/tecsalud.db
      - CHROMA_PERSIST_DIRECTORY=/app/data/vectordb
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-02-01}
      - AZURE_OPENAI_GPT4O_DEPLOYMENT=${AZURE_OPENAI_GPT4O_DEPLOYMENT:-gpt-4o}
      - AZURE_OPENAI_GPT4O_MINI_DEPLOYMENT=${AZURE_OPENAI_GPT4O_MINI_DEPLOYMENT:-gpt-4o-mini}
      - AZURE_OPENAI_EMBEDDING_DEPLOYMENT=${AZURE_OPENAI_EMBEDDING_DEPLOYMENT:-text-embedding-3-large}
    volumes:
      - ./backend:/app
      - backend_data:/app/data
      - backend_logs:/app/logs
    depends_on:
      - chroma
    networks:
      - tecsalud-network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - tecsalud-network
    restart: unless-stopped

  # Chroma Vector Database
  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - tecsalud-network
    restart: unless-stopped

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tecsalud-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL (alternative to SQLite for production)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=tecsalud
      - POSTGRES_USER=tecsalud
      - POSTGRES_PASSWORD=tecsalud_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tecsalud-network
    restart: unless-stopped

  # Nginx (reverse proxy for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - tecsalud-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local
  chroma_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  tecsalud-network:
    driver: bridge

